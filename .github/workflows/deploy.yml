name: Terraform CI/CD Pipeline

on:
  push:

    paths:
      - 'terraform/**'
      - 'docker/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'terraform/**'

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::144317819575:role/OIDC_Role12
        aws-region: us-east-1
        audience: sts.amazonaws.com

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.6
    
    - name: Generate SSH key pair
      run: |
        mkdir -p terraform
        ssh-keygen -t rsa -b 4096 -f terraform/private_key.pem -N ""
        echo "EC2_PRIVATE_KEY=$(cat terraform/private_key.pem | base64 -w 0)" >> $GITHUB_ENV

    - name: Terraform Format Check
      run: terraform fmt -recursive
      working-directory: terraform

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Validate
      run: terraform validate
      working-directory: terraform

    - name: Install tflint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
        #sudo mv tflint /usr/local/bin/

    - name: Run tflint
      run: tflint
      working-directory: terraform

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform

    - name: Terraform Apply (main branch only)
      if: github.ref == 'refs/heads/main'
      id: apply
      run: terraform apply -auto-approve -no-color
      working-directory: terraform

    - name: Get EC2 public IP address
      id: tf_outputs
      working-directory: terraform
      run: |
        echo "ec2_ip=$(terraform output -raw ec2_public_ip)" >> $GITHUB_OUTPUT

    - name: Export EC2 IP to env
      run: echo "EC2 IP is ${{ steps.tf_outputs.outputs.ec2_ip }}"
    
    - name: Deploy Docker Compose on EC2
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ env.EC2_IP }}
        username: ubuntu
        key_path: terraform/private_key.pem
        script: |
          sudo apt-get update -y
          sudo apt-get install -y docker.io docker-compose
          mkdir -p ~/openproject-devlake
          cd ~/openproject-devlake
          echo "${{ secrets.DOCKER_COMPOSE_YML }}" > docker-compose.yml
          echo "${{ secrets.NGINX_CONF }}" > nginx.conf
          docker-compose up -d
